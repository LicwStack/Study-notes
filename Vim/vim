w	下一个单词的开头
e	下一个单词的结尾
b	上一个单词的开头
ge	上一个单词的结尾
i	在当前光标编辑
I	在行首插入
A	在行尾插入
a	在光标后编辑
o	在当前航后插入新行
O	在当前行前插入新行
cw	替换光标所在位置后到一个单词结尾的字符
:w	保存文档
:w 文件名	另存为
:q!	强制退出不保存
:q	退出
:wq!	前置保存退出
:saveas 文件	另存为
:x	保存退出
:wq	保存退出

普通模式下输入shift+zz即可保存推出			
x	删除所在字符
X	删除前一个字符
Delete	同x
dd	删除游标所在的行
dw	删除一个单词
d$或D	删除值行尾
d^	删除至行首
dG	删除到文档结尾
d1G	删除到文档开头
.	重复上次的命令
10x 3dd dw d2w 
4G	跳转到第几行
gg	跳转到第一行
G	跳转到最后一行
ctrl+o	快速返回到上次的位置
0或^	到行头
$	到行尾
////////行内跳转
f<字母>	向后搜索<字母>跳转到第一个匹配的位置
F<字母>	向前搜索<字母>跳转到第一个匹配的位置
t<字母>	向后搜索<字母>跳转到第一个匹配的位置之前的一个字母
T<字母>	向前搜索<字母>跳转到第一个匹配的位置之前的一个字母

yy	复制游标所在行	3yy
y^/y0	复制到行首，不包括光标所在字符
y$	复制到行尾
yw	复制一个单词	y2w
yG	复制文章结尾
y1G	复制到文章开头

p	复制到光标后/下
P	复制到光标前/上

ddp	光标行与下面行交换

r<字母>	游标所在字母替换为制定字母
R	连续替换，知道按下Esc
cc	替换正行,/删除镇行，静茹插入模式
cw	删除一个单词，进入插入模式
C/大写	替换游标以后到行魔
～	反转游标所在大小写
u(n)	撤销操作
U	撤销当前行的所有修改
ctrl+r	redo,撤销undo的操作
>>	正行向右缩进
<<	整行向左缩进
:set shiftwidth?/:set sw?
:set shiftwidth=10	//缩进设定值

//调整文本位置
:ce	文本居中
:ri	文本居右
:le	文本居左

//查找
/字符串		乡下查找
？字符串	向上查找
n	继续查找
N	反响继续查找

\*	向上查找游标所在处单词
\#	向下查找游标所在出单词
g\*	向上查找游标所在处单词部分符合
g\#     向下查找游标所在出单词部分符合
n/N可用

使用vim打开多个文件
:n	切换到下一个文件
:N	切换到上一个文件
:n!	强制切换到下一个文件,修改后的文件不保存
:N	强制切换到上一个文件，修改后的文件不保存

:e#	关闭当前文件，回到上一个文件
:ls	列出以前编辑过的文件
:b 2.txt	进入文件2.txt编辑
:bd 2.txt	删除编辑过列表中的2.txt
:f	显示当前文件名字
:f new	另存为new文件
回复文件
vim -r file	打开代会回复文件
:ewcover file	恢复文件

//可视模式
v	字符选择模式，再按恢复
shift+v	行选择模式，再按恢复
ctrl+v	区域选择模式，再按恢复
d	删除选中区域
y	复制选中区域

//视窗操作
：new	打开新的vim视窗
:sp	横向打开视窗
：vsp	纵向打开视窗

普通模式下Ctrl-w v 将当前窗口分割成两个水平的窗口
普通模式下Ctrl-w v 将当前窗口分割成两个垂直的窗口
普通模式下Ctrl-w q 即 :q 结束分割出来的视窗。如果在新视窗中有输入需要使用强制符！即:q!
普通模式下Ctrl-w o 打开一个视窗并且隐藏之前的所有视窗
普通模式下Ctrl-w j 移至下面视窗
普通模式下Ctrl-w k 移至上面视窗
普通模式下Ctrl-w h 移至左边视窗
普通模式下Ctrl-w l 移至右边视窗
普通模式下Ctrl-w J 将当前视窗移至下面
普通模式下Ctrl-w K 将当前视窗移至上面
普通模式下Ctrl-w H 将当前视窗移至左边
普通模式下Ctrl-w L 将当前视窗移至右边
普通模式下Ctrl-w - 减小视窗的高度
普通模式下Ctrl-w + 增加视窗的高度


如果使用非chrome浏览器可以使用Ctrl+w进行视窗间的跳转



//文档加密

vim -x file

//在vim中执行外部命令
加上！
:!ls	显示当前文件目录的列表



普通模式下按F1打开vim自己预设的帮助文档
命令行模式下输入:h shiftwidth 打开名为shiftwidth的帮助文件
命令行模式下输入:ver 显示版本及参数


1.vim的功能设定

可以在编辑文件的时候进行功能设定，如命令行模式下输入:set nu（显示行数），设定值退出vim后不会保存。要永久保存配置需要修改vim配置文件。 vim的配置文件~/.vimrc，可以打开文件进行修改，不过务必小心不要影响vim正常使用
2.获取目前的设定

    命令行模式下输入:set或者:se显示所有修改过的配置
    命令行模式下输入:set all 显示所有的设定值
    命令行模式下输入:set option? 显示option的设定值
    命令行模式下输入:set nooption 取消当期设定值

3.set功能的说明

    命令行模式下输入:set autoindent(ai) 设置自动缩进
    命令行模式下输入:set autowrite(aw) 设置自动存档，默认未打开
    命令行模式下输入:set background=dark或light，设置背景风格
    命令行模式下输入:set backup(bk) 设置自动备份，默认未打开
    命令行模式下输入: set cindent(cin) 设置C语言风格缩进
